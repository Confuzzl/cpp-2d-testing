SCENE INIT
Quadtree::insert()
element 0 at index 0
Quadtree::insert(
	ent=0,
	box=[(+0.3 -0.0), (+0.8 +0.4)],
	nodeIndex=0 Node(first=0, count=0),
	nodeBox=[(-4.0 -4.0), (+4.0 +4.0)],
	depth=3,
	elementIndex=0
)
empty leaf new first 0: (4294967295, 0)
Quadtree::insert()
element 1 at index 1
Quadtree::insert(
	ent=1,
	box=[(-0.4 -0.6), (+0.0 -0.4)],
	nodeIndex=0 Node(first=0, count=1),
	nodeBox=[(-4.0 -4.0), (+4.0 +4.0)],
	depth=3,
	elementIndex=1
)
nonempty leaf
Quadtree::insert()
element 2 at index 2
Quadtree::insert(
	ent=2,
	box=[(+0.3 +0.1), (+0.7 +0.3)],
	nodeIndex=0 Node(first=0, count=2),
	nodeBox=[(-4.0 -4.0), (+4.0 +4.0)],
	depth=3,
	elementIndex=2
)
pushing leaves
0 (index=0) -> 1
Quadtree::insert(
	ent=2,
	box=[(+0.3 +0.1), (+0.7 +0.3)],
	nodeIndex=2 Node(first=4294967295, count=0),
	nodeBox=[(+0.0 +0.0), (+4.0 +4.0)],
	depth=2,
	elementIndex=0
)
empty leaf new first 0: (4294967295, 0)
1 (index=1) -> 4294967295
Quadtree::insert(
	ent=2,
	box=[(+0.3 +0.1), (+0.7 +0.3)],
	nodeIndex=2 Node(first=0, count=1),
	nodeBox=[(+0.0 +0.0), (+4.0 +4.0)],
	depth=2,
	elementIndex=1
)
nonempty leaf
inserting children
Quadtree::insert(
	ent=2,
	box=[(+0.3 +0.1), (+0.7 +0.3)],
	nodeIndex=2 Node(first=0, count=2),
	nodeBox=[(+0.0 +0.0), (+4.0 +4.0)],
	depth=2,
	elementIndex=2
)
pushing leaves
0 (index=0) -> 1
Quadtree::insert(
	ent=2,
	box=[(+0.3 +0.1), (+0.7 +0.3)],
	nodeIndex=7 Node(first=4294967295, count=0),
	nodeBox=[(+0.0 +0.0), (+2.0 +2.0)],
	depth=1,
	elementIndex=0
)
empty leaf new first 0: (4294967295, 0)
1 (index=1) -> 4294967295
Quadtree::insert(
	ent=2,
	box=[(+0.3 +0.1), (+0.7 +0.3)],
	nodeIndex=7 Node(first=0, count=1),
	nodeBox=[(+0.0 +0.0), (+2.0 +2.0)],
	depth=1,
	elementIndex=1
)
nonempty leaf
inserting children
Quadtree::insert(
	ent=2,
	box=[(+0.3 +0.1), (+0.7 +0.3)],
	nodeIndex=7 Node(first=0, count=2),
	nodeBox=[(+0.0 +0.0), (+2.0 +2.0)],
	depth=1,
	elementIndex=2
)
pushing leaves
0 (index=0) -> 1
Quadtree::insert(
	ent=2,
	box=[(+0.3 +0.1), (+0.7 +0.3)],
	nodeIndex=11 Node(first=4294967295, count=0),
	nodeBox=[(+0.0 +0.0), (+1.0 +1.0)],
	depth=0,
	elementIndex=0
)
empty leaf new first 0: (4294967295, 0)
1 (index=1) -> 4294967295
Quadtree::insert(
	ent=2,
	box=[(+0.3 +0.1), (+0.7 +0.3)],
	nodeIndex=11 Node(first=0, count=1),
	nodeBox=[(+0.0 +0.0), (+1.0 +1.0)],
	depth=0,
	elementIndex=1
)
nonempty leaf
inserting children
Quadtree::insert(
	ent=2,
	box=[(+0.3 +0.1), (+0.7 +0.3)],
	nodeIndex=11 Node(first=0, count=2),
	nodeBox=[(+0.0 +0.0), (+1.0 +1.0)],
	depth=0,
	elementIndex=2
)
nonempty leaf
Quadtree::insert()
element 3 at index 3
Quadtree::insert(
	ent=3,
	box=[(-0.8 +0.6), (-0.4 +1.1)],
	nodeIndex=0 Node(first=1, count=4294967295),
	nodeBox=[(-4.0 -4.0), (+4.0 +4.0)],
	depth=3,
	elementIndex=3
)
inserting children
Quadtree::insert(
	ent=3,
	box=[(-0.8 +0.6), (-0.4 +1.1)],
	nodeIndex=1 Node(first=4294967295, count=0),
	nodeBox=[(-4.0 +0.0), (+0.0 +4.0)],
	depth=2,
	elementIndex=3
)
empty leaf new first 3: (4294967295, 3)
Quadtree::insert()
element 4 at index 4
Quadtree::insert(
	ent=4,
	box=[(-1.0 +0.7), (-0.7 +0.9)],
	nodeIndex=0 Node(first=1, count=4294967295),
	nodeBox=[(-4.0 -4.0), (+4.0 +4.0)],
	depth=3,
	elementIndex=4
)
inserting children
Quadtree::insert(
	ent=4,
	box=[(-1.0 +0.7), (-0.7 +0.9)],
	nodeIndex=1 Node(first=3, count=1),
	nodeBox=[(-4.0 +0.0), (+0.0 +4.0)],
	depth=2,
	elementIndex=4
)
nonempty leaf
nodes:
0: first=1 count=4294967295
1: first=3 count=2
2: first=5 count=4294967295
3: first=4294967295 count=0
4: first=4294967295 count=0
5: first=4294967295 count=0
6: first=4294967295 count=0
7: first=9 count=4294967295
8: first=4294967295 count=0
9: first=4294967295 count=0
10: first=4294967295 count=0
11: first=0 count=3
12: first=4294967295 count=0
element nodes:
0: next=1 index=0
1: next=2 index=1
2: next=4294967295 index=2
3: next=4 index=3
4: next=4294967295 index=4
elements:
0: id=0
1: id=1
2: id=2
3: id=3
4: id=4
SCENE COMPLETE
==================================
Quadtree::queryAll(box=[(-1.0 -1.0), (+1.0 +1.0)])
Quadtree::queryLeaves(box=[(-1.0 -1.0), (+1.0 +1.0)])
Quadtree::queryLeaves(box=[(-1.0 -1.0), (+1.0 +1.0)], node, nodeBox=[(-4.0 -4.0), (+4.0 +4.0)], list, min=18446744073709551615, max=0)
going branches
Quadtree::queryLeaves(box=[(-1.0 -1.0), (+1.0 +1.0)], node, nodeBox=[(-4.0 +0.0), (+0.0 +4.0)], list, min=18446744073709551615, max=0)
checking 2 leaf elements
element 3 : [(-0.8 +0.6), (-0.4 +1.1)]
element 4 : [(-1.0 +0.7), (-0.7 +0.9)]
Quadtree::queryLeaves(box=[(-1.0 -1.0), (+1.0 +1.0)], node, nodeBox=[(+0.0 +0.0), (+4.0 +4.0)], list, min=3, max=4)
going branches
Quadtree::queryLeaves(box=[(-1.0 -1.0), (+1.0 +1.0)], node, nodeBox=[(+0.0 +2.0), (+2.0 +4.0)], list, min=3, max=4)
Quadtree::queryLeaves(box=[(-1.0 -1.0), (+1.0 +1.0)], node, nodeBox=[(+2.0 +2.0), (+4.0 +4.0)], list, min=3, max=4)
Quadtree::queryLeaves(box=[(-1.0 -1.0), (+1.0 +1.0)], node, nodeBox=[(+0.0 +0.0), (+2.0 +2.0)], list, min=3, max=4)
going branches
Quadtree::queryLeaves(box=[(-1.0 -1.0), (+1.0 +1.0)], node, nodeBox=[(+0.0 +1.0), (+1.0 +2.0)], list, min=3, max=4)
Quadtree::queryLeaves(box=[(-1.0 -1.0), (+1.0 +1.0)], node, nodeBox=[(+1.0 +1.0), (+2.0 +2.0)], list, min=3, max=4)
Quadtree::queryLeaves(box=[(-1.0 -1.0), (+1.0 +1.0)], node, nodeBox=[(+0.0 +0.0), (+1.0 +1.0)], list, min=3, max=4)
checking 3 leaf elements
element 0 : [(+0.3 -0.0), (+0.8 +0.4)]
element 1 : [(-0.4 -0.6), (+0.0 -0.4)]
element 2 : [(+0.3 +0.1), (+0.7 +0.3)]
Quadtree::queryLeaves(box=[(-1.0 -1.0), (+1.0 +1.0)], node, nodeBox=[(+1.0 +0.0), (+2.0 +1.0)], list, min=0, max=4)
Quadtree::queryLeaves(box=[(-1.0 -1.0), (+1.0 +1.0)], node, nodeBox=[(+2.0 +0.0), (+4.0 +2.0)], list, min=0, max=4)
Quadtree::queryLeaves(box=[(-1.0 -1.0), (+1.0 +1.0)], node, nodeBox=[(-4.0 -4.0), (+0.0 +0.0)], list, min=0, max=4)
Quadtree::queryLeaves(box=[(-1.0 -1.0), (+1.0 +1.0)], node, nodeBox=[(+0.0 -4.0), (+4.0 +0.0)], list, min=0, max=4)
